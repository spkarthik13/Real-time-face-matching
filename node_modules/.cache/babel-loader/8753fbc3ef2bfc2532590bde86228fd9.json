{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\spkar\\\\IdeaProjects\\\\Real Time Image Matching\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\spkar\\\\IdeaProjects\\\\Real Time Image Matching\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\spkar\\\\IdeaProjects\\\\Real Time Image Matching\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\spkar\\\\IdeaProjects\\\\Real Time Image Matching\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\spkar\\\\IdeaProjects\\\\Real Time Image Matching\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\spkar\\\\IdeaProjects\\\\Real Time Image Matching\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as faceapi from \"face-api.js\";\nimport \"./styles.css\";\nvar MODEL_WEIGHTS = \"weights\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      label: \"\"\n    };\n    _this.videoRef = React.createRef();\n    _this.canvasRef = React.createRef();\n    _this.face1Ref = React.createRef();\n    _this.face2Ref = React.createRef();\n\n    _this.detectFrame = function (video) {\n      console.log(video.width);\n      console.log(_this.canvasRef.current.width);\n      faceapi.detectAllFaces(video).then(function (predictions) {\n        var face1 = predictions[0];\n        var face2 = predictions[1];\n        var desc1 = null;\n        var desc2 = null;\n\n        if (face1) {\n          var destCtx = _this.face1Ref.current.getContext(\"2d\");\n\n          destCtx.drawImage(video, face1.box._x, face1.box._y, face1.box._width, face1.box._height, 0, 0, 100, 100);\n          desc1 = faceapi.computeFaceDescriptor(_this.face1Ref.current);\n        } else {\n          var _destCtx = _this.face1Ref.current.getContext(\"2d\");\n\n          _destCtx.clearRect(0, 0, _destCtx.canvas.width, _destCtx.canvas.height);\n        }\n\n        if (face2) {\n          var _destCtx2 = _this.face2Ref.current.getContext(\"2d\");\n\n          _destCtx2.drawImage(video, face2.box._x, face2.box._y, face2.box._width, face2.box._height, 0, 0, 100, 100);\n\n          desc2 = faceapi.computeFaceDescriptor(_this.face2Ref.current);\n        } else {\n          var _destCtx3 = _this.face2Ref.current.getContext(\"2d\");\n\n          _destCtx3.clearRect(0, 0, _destCtx3.canvas.width, _destCtx3.canvas.height);\n        }\n\n        if (desc1 && desc2) {\n          Promise.all([desc1, desc2]).then(function (res) {\n            var distance = faceapi.round(faceapi.euclideanDistance(res[0], res[1]));\n\n            _this.setState({\n              label: distance > 0.55 ? \"NO MATCH :(\" : \"FACES MATCH!\",\n              color: distance > 0.55 ? \"#cc0000\" : \"#66ff66\"\n            });\n\n            _this.renderPredictions(predictions);\n\n            requestAnimationFrame(function () {\n              _this.detectFrame(video);\n            });\n          });\n        } else {\n          _this.setState({\n            label: \"\"\n          });\n\n          _this.renderPredictions(predictions);\n\n          requestAnimationFrame(function () {\n            _this.detectFrame(video);\n          });\n        }\n      });\n    };\n\n    _this.renderPredictions = function (predictions) {\n      var ctx = _this.canvasRef.current.getContext(\"2d\");\n\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      predictions.forEach(function (prediction) {\n        var x = prediction.box._x;\n        var y = prediction.box._y;\n        var width = prediction.box._width;\n        var height = prediction.box._height; // Draw the bounding box.\n\n        ctx.strokeStyle = \"#00FFFF\";\n        ctx.lineWidth = 4;\n        ctx.strokeRect(x + 55, y + 55, width + 40, height + 40);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        var webCamPromise = navigator.mediaDevices.getUserMedia({\n          audio: false,\n          video: {\n            facingMode: \"user\"\n          }\n        }).then(function (stream) {\n          window.stream = stream;\n          _this2.videoRef.current.srcObject = stream;\n          return new Promise(function (resolve, reject) {\n            _this2.videoRef.current.onloadedmetadata = function () {\n              resolve();\n            };\n          });\n        });\n        var modelPromise = faceapi.loadSsdMobilenetv1Model(MODEL_WEIGHTS);\n        var modelPromise2 = faceapi.loadFaceRecognitionModel(MODEL_WEIGHTS);\n        Promise.all([modelPromise, modelPromise2, webCamPromise]).then(function (values) {\n          _this2.detectFrame(_this2.videoRef.current);\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        className: \"size\",\n        autoPlay: true,\n        playsInline: true,\n        muted: true,\n        ref: this.videoRef,\n        width: \"800\",\n        height: \"600\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        className: \"size\",\n        ref: this.canvasRef,\n        width: \"800\",\n        height: \"600\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        className: \"face1\",\n        ref: this.face1Ref,\n        width: \"100\",\n        height: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        className: \"face2\",\n        ref: this.face2Ref,\n        width: \"100\",\n        height: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"label\",\n        style: {\n          color: this.state.color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, this.state.label));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 174\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["C:\\Users\\spkar\\IdeaProjects\\Real Time Image Matching\\src\\index.js"],"names":["React","ReactDOM","faceapi","MODEL_WEIGHTS","App","state","label","videoRef","createRef","canvasRef","face1Ref","face2Ref","detectFrame","video","console","log","width","current","detectAllFaces","then","predictions","face1","face2","desc1","desc2","destCtx","getContext","drawImage","box","_x","_y","_width","_height","computeFaceDescriptor","clearRect","canvas","height","Promise","all","res","distance","round","euclideanDistance","setState","color","renderPredictions","requestAnimationFrame","ctx","forEach","prediction","x","y","strokeStyle","lineWidth","strokeRect","navigator","mediaDevices","getUserMedia","webCamPromise","audio","facingMode","stream","window","srcObject","resolve","reject","onloadedmetadata","modelPromise","loadSsdMobilenetv1Model","modelPromise2","loadFaceRecognitionModel","values","catch","error","Component","rootElement","document","getElementById","render"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AACA,OAAO,cAAP;AAEA,IAAMC,aAAa,GAAG,SAAtB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;UAGRC,Q,GAAWP,KAAK,CAACQ,SAAN,E;UACXC,S,GAAYT,KAAK,CAACQ,SAAN,E;UACZE,Q,GAAWV,KAAK,CAACQ,SAAN,E;UACXG,Q,GAAWX,KAAK,CAACQ,SAAN,E;;UAgCXI,W,GAAc,UAAAC,KAAK,EAAI;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKN,SAAL,CAAeQ,OAAf,CAAuBD,KAAnC;AAEAd,MAAAA,OAAO,CAACgB,cAAR,CAAuBL,KAAvB,EAA8BM,IAA9B,CAAmC,UAAAC,WAAW,EAAI;AAChD,YAAMC,KAAK,GAAGD,WAAW,CAAC,CAAD,CAAzB;AACA,YAAME,KAAK,GAAGF,WAAW,CAAC,CAAD,CAAzB;AACA,YAAIG,KAAK,GAAG,IAAZ;AACA,YAAIC,KAAK,GAAG,IAAZ;;AACA,YAAIH,KAAJ,EAAW;AACT,cAAMI,OAAO,GAAG,MAAKf,QAAL,CAAcO,OAAd,CAAsBS,UAAtB,CAAiC,IAAjC,CAAhB;;AACAD,UAAAA,OAAO,CAACE,SAAR,CACEd,KADF,EAEEQ,KAAK,CAACO,GAAN,CAAUC,EAFZ,EAGER,KAAK,CAACO,GAAN,CAAUE,EAHZ,EAIET,KAAK,CAACO,GAAN,CAAUG,MAJZ,EAKEV,KAAK,CAACO,GAAN,CAAUI,OALZ,EAME,CANF,EAOE,CAPF,EAQE,GARF,EASE,GATF;AAWAT,UAAAA,KAAK,GAAGrB,OAAO,CAAC+B,qBAAR,CAA8B,MAAKvB,QAAL,CAAcO,OAA5C,CAAR;AACD,SAdD,MAcO;AACL,cAAMQ,QAAO,GAAG,MAAKf,QAAL,CAAcO,OAAd,CAAsBS,UAAtB,CAAiC,IAAjC,CAAhB;;AACAD,UAAAA,QAAO,CAACS,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBT,QAAO,CAACU,MAAR,CAAenB,KAAvC,EAA8CS,QAAO,CAACU,MAAR,CAAeC,MAA7D;AACD;;AACD,YAAId,KAAJ,EAAW;AACT,cAAMG,SAAO,GAAG,MAAKd,QAAL,CAAcM,OAAd,CAAsBS,UAAtB,CAAiC,IAAjC,CAAhB;;AACAD,UAAAA,SAAO,CAACE,SAAR,CACEd,KADF,EAEES,KAAK,CAACM,GAAN,CAAUC,EAFZ,EAGEP,KAAK,CAACM,GAAN,CAAUE,EAHZ,EAIER,KAAK,CAACM,GAAN,CAAUG,MAJZ,EAKET,KAAK,CAACM,GAAN,CAAUI,OALZ,EAME,CANF,EAOE,CAPF,EAQE,GARF,EASE,GATF;;AAWAR,UAAAA,KAAK,GAAGtB,OAAO,CAAC+B,qBAAR,CAA8B,MAAKtB,QAAL,CAAcM,OAA5C,CAAR;AACD,SAdD,MAcO;AACL,cAAMQ,SAAO,GAAG,MAAKd,QAAL,CAAcM,OAAd,CAAsBS,UAAtB,CAAiC,IAAjC,CAAhB;;AACAD,UAAAA,SAAO,CAACS,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBT,SAAO,CAACU,MAAR,CAAenB,KAAvC,EAA8CS,SAAO,CAACU,MAAR,CAAeC,MAA7D;AACD;;AACD,YAAIb,KAAK,IAAIC,KAAb,EAAoB;AAClBa,UAAAA,OAAO,CAACC,GAAR,CAAY,CAACf,KAAD,EAAQC,KAAR,CAAZ,EAA4BL,IAA5B,CAAiC,UAAAoB,GAAG,EAAI;AACtC,gBAAMC,QAAQ,GAAGtC,OAAO,CAACuC,KAAR,CACfvC,OAAO,CAACwC,iBAAR,CAA0BH,GAAG,CAAC,CAAD,CAA7B,EAAkCA,GAAG,CAAC,CAAD,CAArC,CADe,CAAjB;;AAGA,kBAAKI,QAAL,CAAc;AACZrC,cAAAA,KAAK,EAAEkC,QAAQ,GAAG,IAAX,GAAkB,aAAlB,GAAkC,cAD7B;AAEZI,cAAAA,KAAK,EAAEJ,QAAQ,GAAG,IAAX,GAAkB,SAAlB,GAA8B;AAFzB,aAAd;;AAIA,kBAAKK,iBAAL,CAAuBzB,WAAvB;;AACA0B,YAAAA,qBAAqB,CAAC,YAAM;AAC1B,oBAAKlC,WAAL,CAAiBC,KAAjB;AACD,aAFoB,CAArB;AAGD,WAZD;AAaD,SAdD,MAcO;AACL,gBAAK8B,QAAL,CAAc;AACZrC,YAAAA,KAAK,EAAE;AADK,WAAd;;AAGA,gBAAKuC,iBAAL,CAAuBzB,WAAvB;;AACA0B,UAAAA,qBAAqB,CAAC,YAAM;AAC1B,kBAAKlC,WAAL,CAAiBC,KAAjB;AACD,WAFoB,CAArB;AAGD;AACF,OAhED;AAiED,K;;UAEDgC,iB,GAAoB,UAAAzB,WAAW,EAAI;AACjC,UAAM2B,GAAG,GAAG,MAAKtC,SAAL,CAAeQ,OAAf,CAAuBS,UAAvB,CAAkC,IAAlC,CAAZ;;AACAqB,MAAAA,GAAG,CAACb,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBa,GAAG,CAACZ,MAAJ,CAAWnB,KAA/B,EAAsC+B,GAAG,CAACZ,MAAJ,CAAWC,MAAjD;AAEAhB,MAAAA,WAAW,CAAC4B,OAAZ,CAAoB,UAAAC,UAAU,EAAI;AAChC,YAAMC,CAAC,GAAGD,UAAU,CAACrB,GAAX,CAAeC,EAAzB;AACA,YAAMsB,CAAC,GAAGF,UAAU,CAACrB,GAAX,CAAeE,EAAzB;AACA,YAAMd,KAAK,GAAGiC,UAAU,CAACrB,GAAX,CAAeG,MAA7B;AACA,YAAMK,MAAM,GAAGa,UAAU,CAACrB,GAAX,CAAeI,OAA9B,CAJgC,CAKhC;;AACAe,QAAAA,GAAG,CAACK,WAAJ,GAAkB,SAAlB;AACAL,QAAAA,GAAG,CAACM,SAAJ,GAAgB,CAAhB;AACAN,QAAAA,GAAG,CAACO,UAAJ,CAAeJ,CAAC,GAAC,EAAjB,EAAqBC,CAAC,GAAC,EAAvB,EAA2BnC,KAAK,GAAC,EAAjC,EAAqCoB,MAAM,GAAC,EAA5C;AACD,OATD;AAUD,K;;;;;;;wCAnHmB;AAAA;;AAClB,UAAImB,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACC,YAAV,CAAuBC,YAArD,EAAmE;AACjE,YAAMC,aAAa,GAAGH,SAAS,CAACC,YAAV,CACnBC,YADmB,CACN;AACZE,UAAAA,KAAK,EAAE,KADK;AAEZ9C,UAAAA,KAAK,EAAE;AACL+C,YAAAA,UAAU,EAAE;AADP;AAFK,SADM,EAOnBzC,IAPmB,CAOd,UAAA0C,MAAM,EAAI;AACdC,UAAAA,MAAM,CAACD,MAAP,GAAgBA,MAAhB;AACA,UAAA,MAAI,CAACtD,QAAL,CAAcU,OAAd,CAAsB8C,SAAtB,GAAkCF,MAAlC;AACA,iBAAO,IAAIxB,OAAJ,CAAY,UAAC2B,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAA,MAAI,CAAC1D,QAAL,CAAcU,OAAd,CAAsBiD,gBAAtB,GAAyC,YAAM;AAC7CF,cAAAA,OAAO;AACR,aAFD;AAGD,WAJM,CAAP;AAKD,SAfmB,CAAtB;AAgBA,YAAMG,YAAY,GAAGjE,OAAO,CAACkE,uBAAR,CAAgCjE,aAAhC,CAArB;AACA,YAAMkE,aAAa,GAAGnE,OAAO,CAACoE,wBAAR,CAAiCnE,aAAjC,CAAtB;AACAkC,QAAAA,OAAO,CAACC,GAAR,CAAY,CAAC6B,YAAD,EAAeE,aAAf,EAA8BX,aAA9B,CAAZ,EACGvC,IADH,CACQ,UAAAoD,MAAM,EAAI;AACd,UAAA,MAAI,CAAC3D,WAAL,CAAiB,MAAI,CAACL,QAAL,CAAcU,OAA/B;AACD,SAHH,EAIGuD,KAJH,CAIS,UAAAC,KAAK,EAAI;AACd3D,UAAAA,OAAO,CAAC2D,KAAR,CAAcA,KAAd;AACD,SANH;AAOD;AACF;;;6BAyFQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,WAAW,MAHb;AAIE,QAAA,KAAK,MAJP;AAKE,QAAA,GAAG,EAAE,KAAKlE,QALZ;AAME,QAAA,KAAK,EAAC,KANR;AAOE,QAAA,MAAM,EAAC,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,GAAG,EAAE,KAAKE,SAFZ;AAGE,QAAA,KAAK,EAAC,KAHR;AAIE,QAAA,MAAM,EAAC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAgBE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,GAAG,EAAE,KAAKC,QAFZ;AAGE,QAAA,KAAK,EAAC,KAHR;AAIE,QAAA,MAAM,EAAC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,EAsBE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,GAAG,EAAE,KAAKC,QAFZ;AAGE,QAAA,KAAK,EAAC,KAHR;AAIE,QAAA,MAAM,EAAC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBF,EA4BE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,KAAK,EAAE;AAAEiC,UAAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWuC;AAApB,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKvC,KAAL,CAAWC,KADd,CA5BF,CADF;AAkCD;;;;EAjKeN,KAAK,CAAC0E,S;;AAoKxB,IAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACA5E,QAAQ,CAAC6E,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBH,WAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport * as faceapi from \"face-api.js\";\nimport \"./styles.css\";\n\nconst MODEL_WEIGHTS = \"weights\";\n\nclass App extends React.Component {\n  state = {\n    label: \"\"\n  };\n  videoRef = React.createRef();\n  canvasRef = React.createRef();\n  face1Ref = React.createRef();\n  face2Ref = React.createRef();\n\n  componentDidMount() {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const webCamPromise = navigator.mediaDevices\n        .getUserMedia({\n          audio: false,\n          video: {\n            facingMode: \"user\"\n          }\n        })\n        .then(stream => {\n          window.stream = stream;\n          this.videoRef.current.srcObject = stream;\n          return new Promise((resolve, reject) => {\n            this.videoRef.current.onloadedmetadata = () => {\n              resolve();\n            };\n          });\n        });\n      const modelPromise = faceapi.loadSsdMobilenetv1Model(MODEL_WEIGHTS);\n      const modelPromise2 = faceapi.loadFaceRecognitionModel(MODEL_WEIGHTS);\n      Promise.all([modelPromise, modelPromise2, webCamPromise])\n        .then(values => {\n          this.detectFrame(this.videoRef.current);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  }\n\n  detectFrame = video => {\n    console.log(video.width);\n    console.log(this.canvasRef.current.width);\n\n    faceapi.detectAllFaces(video).then(predictions => {\n      const face1 = predictions[0];\n      const face2 = predictions[1];\n      let desc1 = null;\n      let desc2 = null;\n      if (face1) {\n        const destCtx = this.face1Ref.current.getContext(\"2d\");\n        destCtx.drawImage(\n          video,\n          face1.box._x,\n          face1.box._y,\n          face1.box._width,\n          face1.box._height,\n          0,\n          0,\n          100,\n          100\n        );\n        desc1 = faceapi.computeFaceDescriptor(this.face1Ref.current);\n      } else {\n        const destCtx = this.face1Ref.current.getContext(\"2d\");\n        destCtx.clearRect(0, 0, destCtx.canvas.width, destCtx.canvas.height);\n      }\n      if (face2) {\n        const destCtx = this.face2Ref.current.getContext(\"2d\");\n        destCtx.drawImage(\n          video,\n          face2.box._x,\n          face2.box._y,\n          face2.box._width,\n          face2.box._height,\n          0,\n          0,\n          100,\n          100\n        );\n        desc2 = faceapi.computeFaceDescriptor(this.face2Ref.current);\n      } else {\n        const destCtx = this.face2Ref.current.getContext(\"2d\");\n        destCtx.clearRect(0, 0, destCtx.canvas.width, destCtx.canvas.height);\n      }\n      if (desc1 && desc2) {\n        Promise.all([desc1, desc2]).then(res => {\n          const distance = faceapi.round(\n            faceapi.euclideanDistance(res[0], res[1])\n          );\n          this.setState({\n            label: distance > 0.55 ? \"NO MATCH :(\" : \"FACES MATCH!\",\n            color: distance > 0.55 ? \"#cc0000\" : \"#66ff66\"\n          });\n          this.renderPredictions(predictions);\n          requestAnimationFrame(() => {\n            this.detectFrame(video);\n          });\n        });\n      } else {\n        this.setState({\n          label: \"\"\n        });\n        this.renderPredictions(predictions);\n        requestAnimationFrame(() => {\n          this.detectFrame(video);\n        });\n      }\n    });\n  };\n\n  renderPredictions = predictions => {\n    const ctx = this.canvasRef.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n    predictions.forEach(prediction => {\n      const x = prediction.box._x;\n      const y = prediction.box._y;\n      const width = prediction.box._width;\n      const height = prediction.box._height;\n      // Draw the bounding box.\n      ctx.strokeStyle = \"#00FFFF\";\n      ctx.lineWidth = 4;\n      ctx.strokeRect(x+55, y+55, width+40, height+40);\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <video\n          className=\"size\"\n          autoPlay\n          playsInline\n          muted\n          ref={this.videoRef}\n          width=\"800\"\n          height=\"600\"\n        />\n        <canvas\n          className=\"size\"\n          ref={this.canvasRef}\n          width=\"800\"\n          height=\"600\"\n        />\n        <canvas\n          className=\"face1\"\n          ref={this.face1Ref}\n          width=\"100\"\n          height=\"100\"\n        />\n        <canvas\n          className=\"face2\"\n          ref={this.face2Ref}\n          width=\"100\"\n          height=\"100\"\n        />\n        <div className=\"label\" style={{ color: this.state.color }}>\n          {this.state.label}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}